# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - Badelha

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to registry
      uses: docker/login-action@v2
      with:
        registry: https://badelhadocker.azurecr.io/
        username: ${{ secrets.AzureAppService_ContainerUsername_31f7194006c54207a5795dbed1a43c8a }}
        password: ${{ secrets.AzureAppService_ContainerPassword_e3b35e7a6fcc4aa7890cfe3094019db3 }}

    - name: Convert username to lowercase
      id: lowercase_username
      run: echo "username=$(echo ${{ secrets.AzureAppService_ContainerUsername_31f7194006c54207a5795dbed1a43c8a }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Build and push container image to registry
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: badelhadocker.azurecr.io/${{ env.username }}/hellodocker2:${{ github.sha }}
        file: ./Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Convert username to lowercase
      id: lowercase_username
      run: echo "username=$(echo ${{ secrets.AzureAppService_ContainerUsername_31f7194006c54207a5795dbed1a43c8a }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'Badelha'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_03d5f8a8d7f64c9f8ee43fda282bdc0c }}
        images: 'badelhadocker.azurecr.io/${{ env.username }}/hellodocker2:${{ github.sha }}'

  static_analysis:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v2
      
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'temurin'  # Specify the JDK distribution
          java-package: jdk
          architecture: x64
          check-latest: false

      - name: Cache SonarQube dependencies
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/*.properties') }}
          restore-keys: |
            ${{ runner.os }}-sonar

      - name: Install SonarQube scanner
        run: |
          curl -sSLo sonarqube.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonarqube.zip -d $HOME
          mv $HOME/sonar-scanner-4.6.2.2472-linux $HOME/sonar-scanner
          echo "export PATH=$HOME/sonar-scanner/bin:\$PATH" >> $GITHUB_ENV

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=tasneemeltabakh \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=3744cffbd33976e3781aad62e6523b7609263d1b

      - name: Upload SonarQube analysis report
        uses: actions/upload-artifact@v2
        with:
          name: sonarqube-report
          path: $HOME/.sonar/report-task.txt
